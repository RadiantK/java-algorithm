1. 나열된 수에서 최솟값과 최댓값 구하기
조건 
: 여러개의 수가 배열에 있을 때 그 중 가장 큰 값과 가장 작은 값을 찾는다.
: 배열의 몇 번째에 있는지 순서를 찾는다.
: 반복문을 한번만 사용하여 문제를 해결한다.
: 수의 예 [10, 55, 23, 2, 79, 101, 16, 82, 30, 45]


2. 정렬된 수에서 하나의 수의 위치 찾기
: 여러 개의 수가 정렬된 순서로 있을 때 특정한 수를 찾는 방법
: 단순 반복문을 이용하면 수의 개수에 따라 비교 횟수가 증가하는 O(n)의 수행이 이루어짐
: 수가 정렬된 상태에서는 이진 탐색을 활용하면 매번 비교되는 요소의 수가 절반으로 감소될 수 있으므로
O(logN)의 수행으로 원하는 수를 찾을 수 있음
: 수의 예 : [12, 25, 31, 48, 54, 66, 70, 83, 95, 108]


3. 정렬 알고리즘
평균 수행 시간이 O(n^2)인 알고리즘
: 버블 정렬, 삽입 정렬, 선택 정렬
: 각요소가 다른 요소와 평균 한번 이상씩을 비교를 해서 정렬됨

: 삽입 정렬 구현해보기
: insertion Sort의 기본 개념은 이미 정렬된 상태의 요소에 새로운 요소를 추가할 때 정렬하여
추가하는 개념이다.
: 두 번째 요소 부터 이전 요소들과 비교하면서 insert될 위치를 찾아가며 정렬하는 알고리즘